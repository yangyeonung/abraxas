/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/10.1.20
 * Generated at: 2024-04-14 10:35:25 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import jakarta.servlet.*;
import jakarta.servlet.http.*;
import jakarta.servlet.jsp.*;

public final class join_005fAction_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports,
                 org.apache.jasper.runtime.JspSourceDirectives {

  private static final jakarta.servlet.jsp.JspFactory _jspxFactory =
          jakarta.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(3);
    _jspx_imports_packages.add("jakarta.servlet");
    _jspx_imports_packages.add("jakarta.servlet.http");
    _jspx_imports_packages.add("jakarta.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile jakarta.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public boolean getErrorOnELNotFound() {
    return false;
  }

  public jakarta.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final jakarta.servlet.http.HttpServletRequest request, final jakarta.servlet.http.HttpServletResponse response)
      throws java.io.IOException, jakarta.servlet.ServletException {

    if (!jakarta.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final jakarta.servlet.jsp.PageContext pageContext;
    jakarta.servlet.http.HttpSession session = null;
    final jakarta.servlet.ServletContext application;
    final jakarta.servlet.ServletConfig config;
    jakarta.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    jakarta.servlet.jsp.JspWriter _jspx_out = null;
    jakarta.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("import java.io.IOException;\n");
      out.write("import java.sql.Connection;\n");
      out.write("import java.sql.DriverManager;\n");
      out.write("import java.sql.PreparedStatement;\n");
      out.write("import java.sql.SQLException;\n");
      out.write("import javax.servlet.ServletException;\n");
      out.write("import javax.servlet.annotation.WebServlet;\n");
      out.write("import javax.servlet.http.HttpServlet;\n");
      out.write("import javax.servlet.http.HttpServletRequest;\n");
      out.write("import javax.servlet.http.HttpServletResponse;\n");
      out.write("\n");
      out.write("@WebServlet(\"/join_Action\")\n");
      out.write("public class JoinActionServlet extends HttpServlet {\n");
      out.write("    private static final long serialVersionUID = 1L;\n");
      out.write("\n");
      out.write("    protected void doPost(HttpServletRequest request, HttpServletResponse response)\n");
      out.write("            throws ServletException, IOException {\n");
      out.write("        String userID = request.getParameter(\"userID\");\n");
      out.write("        String userPassword = request.getParameter(\"userPassword\");\n");
      out.write("        String userName = request.getParameter(\"userName\");\n");
      out.write("        String userDate = request.getParameter(\"userDate\");\n");
      out.write("        String userGender = request.getParameter(\"userGender\");\n");
      out.write("\n");
      out.write("        Connection conn = null;\n");
      out.write("        PreparedStatement pstmt = null;\n");
      out.write("\n");
      out.write("        try {\n");
      out.write("            // ì¤ë¼í´ ë°ì´í°ë² ì´ì¤ ì°ê²°\n");
      out.write("            Class.forName(\"oracle.jdbc.driver.OracleDriver\");\n");
      out.write("            conn = DriverManager.getConnection(\"jdbc:oracle:thin:@localhost:1521:XE\", \"ì¬ì©ìëª\", \"ë¹ë°ë²í¸\");\n");
      out.write("\n");
      out.write("            // INSERT ì¿¼ë¦¬ ìì±\n");
      out.write("            String sql = \"INSERT INTO \\\"user\\\" (\\\"userID\\\", \\\"userPassword\\\", \\\"userName\\\", \\\"userDate\\\", \\\"userGender\\\") VALUES (?, ?, ?, TO_DATE(?, 'YYYY-MM-DD'), ?)\";\n");
      out.write("            pstmt = conn.prepareStatement(sql);\n");
      out.write("            pstmt.setString(1, userID);\n");
      out.write("            pstmt.setString(2, userPassword);\n");
      out.write("            pstmt.setString(3, userName);\n");
      out.write("            pstmt.setString(4, userDate);\n");
      out.write("            pstmt.setString(5, userGender);\n");
      out.write("\n");
      out.write("            // ì¿¼ë¦¬ ì¤í\n");
      out.write("            pstmt.executeUpdate();\n");
      out.write("\n");
      out.write("            // íìê°ì ì±ê³µ ì ë¤ë¥¸ íì´ì§ë¡ ì´ë\n");
      out.write("            response.sendRedirect(\"join_success.jsp\");\n");
      out.write("        } catch (Exception e) {\n");
      out.write("            e.printStackTrace();\n");
      out.write("            // íìê°ì ì¤í¨ ì ìë¬ íì´ì§ë¡ ì´ë\n");
      out.write("            response.sendRedirect(\"join_error.jsp\");\n");
      out.write("        } finally {\n");
      out.write("            // ë¦¬ìì¤ í´ì \n");
      out.write("            try {\n");
      out.write("                if (pstmt != null) pstmt.close();\n");
      out.write("                if (conn != null) conn.close();\n");
      out.write("            } catch (SQLException e) {\n");
      out.write("                e.printStackTrace();\n");
      out.write("            }\n");
      out.write("        }\n");
      out.write("    }\n");
      out.write("}\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof jakarta.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
