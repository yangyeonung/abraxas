/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/10.1.20
 * Generated at: 2024-04-16 06:01:27 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.board;

import jakarta.servlet.*;
import jakarta.servlet.http.*;
import jakarta.servlet.jsp.*;

public final class board_005fwrite_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports,
                 org.apache.jasper.runtime.JspSourceDirectives {

  private static final jakarta.servlet.jsp.JspFactory _jspxFactory =
          jakarta.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(3);
    _jspx_imports_packages.add("jakarta.servlet");
    _jspx_imports_packages.add("jakarta.servlet.http");
    _jspx_imports_packages.add("jakarta.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile jakarta.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public boolean getErrorOnELNotFound() {
    return false;
  }

  public jakarta.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final jakarta.servlet.http.HttpServletRequest request, final jakarta.servlet.http.HttpServletResponse response)
      throws java.io.IOException, jakarta.servlet.ServletException {

    if (!jakarta.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final jakarta.servlet.jsp.PageContext pageContext;
    jakarta.servlet.http.HttpSession session = null;
    final jakarta.servlet.ServletContext application;
    final jakarta.servlet.ServletConfig config;
    jakarta.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    jakarta.servlet.jsp.JspWriter _jspx_out = null;
    jakarta.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("<!DOCTYPE html>\n");
      out.write("<html>\n");
      out.write("<!-- head ë¶ë¶ -->\n");
      out.write("<head>\n");
      out.write("    <!-- ìë¨ title -->\n");
      out.write("    <title>Table</title>\n");
      out.write("    <!-- CSS Style ì§ì  -->\n");
      out.write("    <link rel=\"stylesheet\" href=\"../style_contents.css\" type=\"text/css\">\n");
      out.write("    <script>\n");
      out.write("        function ck() {\n");
      out.write("            if (document.wform.name.value == \"\") {\n");
      out.write("                alert(\"write your name cleary\");\n");
      out.write("                document.wform.name.focus();\n");
      out.write("                return false;\n");
      out.write("            }\n");
      out.write("            if (document.wform.pw.value == \"\") {\n");
      out.write("                alert(\"write your password cleary\");\n");
      out.write("                document.wform.pw.focus();\n");
      out.write("                return false;\n");
      out.write("            }\n");
      out.write("            if (document.wform.sub.value == \"\") {\n");
      out.write("                alert(\"write title cleary.\");\n");
      out.write("                document.wform.sub.focus();\n");
      out.write("                return false;\n");
      out.write("            }\n");
      out.write("            if (document.wform.cont.value == \"\") {\n");
      out.write("                alert(\"write information cleary.\");\n");
      out.write("                document.wform.cont.focus();\n");
      out.write("                return false;\n");
      out.write("            }\n");
      out.write("            document.wform.submit();\n");
      out.write("        }\n");
      out.write("    </script>\n");
      out.write("</head>\n");
      out.write("<body>\n");
      out.write("<!-- íë©´ ìë¨ header ë¶ë¶ -->\n");
      out.write("<iframe src=\"../head.jsp\" id=\"bodyFrame\" name=\"body\" width=\"100%\" frameborder=\"0\"></iframe>\n");
      out.write("<!-- íë©´ íë¨ body ë¶ë¶ -->\n");
      out.write("<div id=\"board_contents\" class=\"contents\">\n");
      out.write("    ");
      out.write("\n");
      out.write("    ");
 
        session = request.getSession();
        if (session.getAttribute("user_id") != null) {
    
      out.write("\n");
      out.write("    <form name=\"wform\" method=\"post\" action=\"board_write_ok.jsp\" enctype=\"multipart/form-data\">\n");
      out.write("        <table width=\"600\" class=\"grayColor\">\n");
      out.write("            <tr>\n");
      out.write("                <th colspan=\"5\" style=\"background-color: #323232\">\n");
      out.write("                    <font style=\"color: white; font-size: 150%;\">T A B L E</font>\n");
      out.write("                </th>\n");
      out.write("            </tr>\n");
      out.write("            <tr>\n");
      out.write("                <th width=\"100\"><font>N A M E</font></th>\n");
      out.write("                <td><input type=\"text\" name=\"user_name\" size=\"11\" value=\"\"></td>\n");
      out.write("            </tr>\n");
      out.write("            <tr>\n");
      out.write("                <th><font>PASSWORD</font></th>\n");
      out.write("                <td><input type=\"password\" name=\"password\" size=\"12\"></td>\n");
      out.write("            </tr>\n");
      out.write("            <tr>\n");
      out.write("                <th><font>E-MAIL</font></th>\n");
      out.write("                <td colspan=\"3\"><input type=\"text\" name=\"email\" size=\"40\" value=\"\"></td>\n");
      out.write("            </tr>\n");
      out.write("\n");
      out.write("            <tr>\n");
      out.write("                <th><font>TITLE</font></th>\n");
      out.write("                <td colspan=\"3\"><input type=\"text\" name=\"title\" size=\"40\"></td>\n");
      out.write("            </tr>\n");
      out.write("            <tr>\n");
      out.write("                <th><font>set type HTML</font></th>\n");
      out.write("                <td colspan=\"3\">\n");
      out.write("                    <input type=\"radio\" name=\"tag\" value=\"T\" checked><font size=\"3\">apply</font>\n");
      out.write("                    <input type=\"radio\" name=\"tag\" value=\"F\"><font size=\"3\">unapplied</font>\n");
      out.write("                </td>\n");
      out.write("            </tr>\n");
      out.write("            <tr>\n");
      out.write("                <th><font>detail</font></th>\n");
      out.write("                <td colspan=\"3\" align=\"center\"><textarea name=\"cont\" cols=\"60\" rows=\"10\" style=\"border: 2px;\"></textarea></td>\n");
      out.write("            </tr>\n");
      out.write("            <tr>\n");
      out.write("                <th><font>add file</font></th>\n");
      out.write("                <td colspan=\"3\"><input type=\"file\" name=\"att_file\"><font size=\"2\">&nbsp;&nbsp;(max:4MB)</font></td>\n");
      out.write("            </tr>\n");
      out.write("        </table>\n");
      out.write("    </form>\n");
      out.write("\n");
      out.write("    <p align=\"center\">\n");
      out.write("        <input type=\"button\" value=\"GO\" class=\"btn_default btn_gray\" onclick='ck();'>\n");
      out.write("        <input type=\"reset\" value=\"RESET\" class=\"btn_default btn_gray\">\n");
      out.write("        <input type=\"button\" value=\"MENU\" class=\"btn_default btn_gray\" onclick=\"location.replace('board_list.jsp');\">\n");
      out.write("    </p>\n");
      out.write("    ");
 } 
      out.write("\n");
      out.write("</div>\n");
      out.write("</body>\n");
      out.write("</html>\n");
      out.write("\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof jakarta.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
