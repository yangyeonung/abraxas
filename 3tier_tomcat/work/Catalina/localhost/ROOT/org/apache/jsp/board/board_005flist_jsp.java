/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/10.1.20
 * Generated at: 2024-04-16 05:09:23 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.board;

import jakarta.servlet.*;
import jakarta.servlet.http.*;
import jakarta.servlet.jsp.*;
import java.sql.*;
import javax.naming.*;
import javax.sql.*;

public final class board_005flist_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports,
                 org.apache.jasper.runtime.JspSourceDirectives {

  private static final jakarta.servlet.jsp.JspFactory _jspxFactory =
          jakarta.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(6);
    _jspx_imports_packages.add("java.sql");
    _jspx_imports_packages.add("jakarta.servlet");
    _jspx_imports_packages.add("jakarta.servlet.http");
    _jspx_imports_packages.add("jakarta.servlet.jsp");
    _jspx_imports_packages.add("javax.naming");
    _jspx_imports_packages.add("javax.sql");
    _jspx_imports_classes = null;
  }

  private volatile jakarta.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public boolean getErrorOnELNotFound() {
    return false;
  }

  public jakarta.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final jakarta.servlet.http.HttpServletRequest request, final jakarta.servlet.http.HttpServletResponse response)
      throws java.io.IOException, jakarta.servlet.ServletException {

    if (!jakarta.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final jakarta.servlet.jsp.PageContext pageContext;
    jakarta.servlet.http.HttpSession session = null;
    final jakarta.servlet.ServletContext application;
    final jakarta.servlet.ServletConfig config;
    jakarta.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    jakarta.servlet.jsp.JspWriter _jspx_out = null;
    jakarta.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("<!DOCTYPE html>\n");
      out.write("<html>\n");
      out.write("<head>\n");
      out.write("    <title>게시판</title>\n");
      out.write("    <link rel=\"stylesheet\" href=\"../style_contents.css\" type=\"text/css\">\n");
      out.write("</head>\n");
      out.write("<body>\n");
      out.write("    <iframe src=\"../head.jsp\" id=\"bodyFrame\" name=\"body\" width=\"100%\" frameborder=\"0\"></iframe>\n");
      out.write("    <div id=\"board_contents\" class=\"contents\">\n");
      out.write("        <table width=\"600\" border=\"1\">\n");
      out.write("            <tr>\n");
      out.write("                <th colspan=\"5\" style=\"background-color: #323232\">\n");
      out.write("                    <font style=\"color: white; font-size: 150%;\">게 시 판</font>\n");
      out.write("                </th>\n");
      out.write("            </tr>\n");
      out.write("            <tr bgcolor=\"#c8c8c8\">\n");
      out.write("                <th width=\"7%\"><font>번호</font></th>\n");
      out.write("                <th width=\"41%\"><font>제목</font></th>\n");
      out.write("                <th width=\"15%\"><font>작성자</font></th>\n");
      out.write("                <th width=\"30%\"><font>등록일</font></th>\n");
      out.write("                <th width=\"7%\"><font>조회</font></th>\n");
      out.write("            </tr>\n");
      out.write("            \n");
      out.write("            \n");
      out.write("            ");

                String strKeyword = request.getParameter("keyword");
                String strKeySelect = request.getParameter("k_s");
                Connection conn = null;
                PreparedStatement pstmt = null;
                ResultSet rs = null;
                try {
                    // 오라클 데이터베이스 연결
                    Class.forName("oracle.jdbc.driver.OracleDriver");
                    String dbURL = "jdbc:oracle:thin:@localhost:1521:source"; // Oracle DB URL
                    String dbUsername = "abraxas"; // 데이터베이스 사용자 이름
                    String dbPassword = "2076063678"; // 데이터베이스 비밀번호
                    conn = DriverManager.getConnection(dbURL, dbUsername, dbPassword);
                    // 키워드 조회
                    String strSQL = "SELECT * FROM board";
                    if (strKeyword != null && !strKeyword.isEmpty()) {
                        switch (strKeySelect) {
                            case "1":
                                strSQL += " WHERE strSubject LIKE '%" + strKeyword + "%'";
                                break;
                            case "2":
                                strSQL += " WHERE strContent LIKE '%" + strKeyword + "%'";
                                break;
                            case "3":
                                strSQL += " WHERE strName LIKE '%" + strKeyword + "%'";
                                break;
                        }
                    }
                    strSQL += " ORDER BY strNumber DESC";
                    pstmt = conn.prepareStatement(strSQL);
                    rs = pstmt.executeQuery();
                    if (rs.next()) {
                        do {
                            String b_num = rs.getString("strNumber");
                            String b_name = rs.getString("strName");
                            String b_sub = rs.getString("strSubject");
                            String b_no = rs.getString("viewCount");
                            String b_date = rs.getString("writeDate");
            
      out.write("\n");
      out.write("                            <tr>\n");
      out.write("                                <td width=\"7%\"><font size=\"2\">");
      out.print( b_num );
      out.write("</font></td>\n");
      out.write("                                <td width=\"41%\"><font size=\"3\"><a href=\"board_view.jsp?num=");
      out.print( b_num );
      out.write('"');
      out.write('>');
      out.print( b_sub );
      out.write("</a></font></td>\n");
      out.write("                                <td width=\"15%\"><font size=\"3\">");
      out.print( b_name );
      out.write("</font></td>\n");
      out.write("                                <td width=\"30%\"><font size=\"1\">");
      out.print( b_date );
      out.write("</font></td>\n");
      out.write("                                <td width=\"7%\"><font size=\"2\">");
      out.print( b_no );
      out.write("</font></td>\n");
      out.write("                            </tr>\n");
      out.write("            ");

                        } while (rs.next());
                    } else {
            
      out.write("\n");
      out.write("                        <tr>\n");
      out.write("                            <td colspan=\"5\" class=\"center\"><font><b>검색 결과가 없습니다.</b></font></td>\n");
      out.write("                        </tr>\n");
      out.write("            ");

                    }
                } catch (Exception e) {
                    e.printStackTrace();
                } finally {
                    // 자원 해제
                    if (rs != null) rs.close();
                    if (pstmt != null) pstmt.close();
                    if (conn != null) conn.close();
                }
            
      out.write("\n");
      out.write("        </table>\n");
      out.write("        <br/>\n");
      out.write("        <p align=\"center\">\n");
      out.write("            ");
 if (strKeyword != null && !strKeyword.isEmpty()) { 
      out.write("\n");
      out.write("                <font size=\"2\">[");
      out.print( strKeyword );
      out.write("] 검색 결과입니다.</font>\n");
      out.write("            ");
 } else { 
      out.write("\n");
      out.write("                <font size=\"2\">전체 글 검색 결과입니다.</font>\n");
      out.write("            ");
 } 
      out.write("\n");
      out.write("            <form action=\"board_list.jsp\">\n");
      out.write("                <select name=\"k_s\">\n");
      out.write("                    <option value=\"1\">글제목</option>\n");
      out.write("                    <option value=\"2\">글내용</option>\n");
      out.write("                    <option value=\"3\">작성자</option>\n");
      out.write("                </select>\n");
      out.write("                <input type=\"text\" name=\"keyword\">\n");
      out.write("                <input type=\"submit\" class=\"btn_default btn_gray\" value=\"검색\">\n");
      out.write("		<!-- 글쓰기 버튼 -->\n");
      out.write("            <a href=\"board_write.jsp\" class=\"btn_default btn_gray\"> 글쓰기</a>\n");
      out.write("\n");
      out.write("            </form>\n");
      out.write("        </p>\n");
      out.write("    </div>\n");
      out.write("</body>\n");
      out.write("</html>\n");
      out.write("\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof jakarta.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
